FROM registry.access.redhat.com/rhel7-minimal

# =============
# RHEL packages
# =============

RUN REPOLIST=rhel-7-server-rpms,rhel-server-rhscl-7-rpms \
    INSTALL_PKGS="python27-python-pip openssl wget java-1.8.0-openjdk-headless shadow-utils" \
    && microdnf -y update --enablerepo rhel-7-server-rpms --enablerepo rhel-server-rhscl-7-rpms --setopt=tsflags=nodocs \
    && microdnf -y install --enablerepo rhel-7-server-rpms --enablerepo rhel-server-rhscl-7-rpms --setopt=tsflags=nodocs ${INSTALL_PKGS} \
    && microdnf clean all

# ====
# Java
# ====

# JAR files required to generate OpenID Connect keys
ENV OX_VERSION 3.1.4.Final
ENV OX_BUILD_DATE 2018-09-27

RUN mkdir -p /opt/config-init/javalibs
RUN wget -q https://ox.gluu.org/maven/org/xdi/oxauth-client/${OX_VERSION}/oxauth-client-${OX_VERSION}-jar-with-dependencies.jar -O /opt/config-init/javalibs/oxauth-client.jar
RUN wget -q https://ox.gluu.org/maven/org/xdi/oxShibbolethKeyGenerator/${OX_VERSION}/oxShibbolethKeyGenerator-${OX_VERSION}.jar -O /opt/config-init/javalibs/idp3_cml_keygenerator.jar

# ======
# Python
# ======

COPY requirements.txt /tmp/requirements.txt
RUN source scl_source enable python27 \
    && pip install --no-cache-dir -U pip \
    && pip install --no-cache-dir -r /tmp/requirements.txt

# ====
# misc
# ====

LABEL name="config-init" \
    maintainer="Gluu Inc. <support@gluu.org>" \
    vendor="Gluu Federation" \
    version="3.1.4" \
    release="01" \
    summary="Gluu's config-init app" \
    description="Generate, load, or dump cluster-wide configuration"

ENV GLUU_CONFIG_ADAPTER consul
ENV GLUU_CONSUL_HOST localhost
ENV GLUU_CONSUL_PORT 8500
# force to use default consistency mode
ENV GLUU_CONSUL_CONSISTENCY default
ENV GLUU_CONSUL_SCHEME http
ENV GLUU_CONSUL_VERIFY false
ENV GLUU_CONSUL_CACERT_FILE /etc/certs/consul_ca.crt
ENV GLUU_CONSUL_CERT_FILE /etc/certs/consul_client.crt
ENV GLUU_CONSUL_KEY_FILE /etc/certs/consul_client.key
ENV GLUU_CONSUL_TOKEN_FILE /etc/certs/consul_token
ENV GLUU_KUBERNETES_NAMESPACE default
ENV GLUU_KUBERNETES_CONFIGMAP gluu

COPY LICENSE /licenses
COPY scripts /opt/config-init/scripts
COPY templates /opt/config-init/templates
COPY static /opt/config-init/static

RUN mkdir -p /etc/certs /opt/config-init/db
# create gluu user
RUN useradd -ms /bin/sh gluu
# adjust ownership
RUN chown -R root:gluu /etc/certs \
    && chown -R gluu:gluu /opt/config-init \
    && chmod -R g+w /etc/certs

# run the entrypoint as gluu user
USER gluu
ENTRYPOINT ["sh", "/opt/config-init/scripts/entrypoint.sh"]
CMD ["--help"]
